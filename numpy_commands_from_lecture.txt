a = [1,2,3,'a','b','c',23.42]
a
type(a)
import numpy as np
list(range(10))
np.arange(10)
a = np.arange(15).reshape(3,5)
a
a.size
a.shape
a.dtype
type(a)
a = np.array([2,3,4])
a
a = np.array([[2,3,4],[1,2,1]])
a
a = np.array([2,3,4,'something'])
a
a = np.zeros(4,6)
a = np.zeros((4,6))
a
a.dtype
a = np.zeros((4,6), dtype = int32)
a = np.zeros((4,6), dtype = int)
a.dtype
a
a = np.ones([3,3,3])
a
a.size
a.dtype
a.shape
a = np.arange(10, 30, 5)
a
a = np.arange(0., 1., 0.01)
a
a.size
a = np.linspace(0., 1., 100)
a
a = np.linspace(0., 1.)
a
a.size
np.sin(a)
a = np.zeros((3,4,5))
a
a = np.zeros((300,400))
a
a = np.array([20,30,40,50])
a
b = np.arange(4)
b
c = a - b
c
b**2
10*np.sin(a)
a < 35
a = np.arange(100).reshape(25,4)
a
a.shape
a % 3 == 0
A = np.array([[1,1],[0,1]])
A
B = np.array([[2,0],[3,4]])
B
A*B
np.dot(A,B)
np.dot(B,A)
x = np.array([0,0,1])
y = np.array([0,1,0])
np.cross(x,y)
A
type(A)
Amatrix = np.matrix(A)
type(Amatrix)
Amatrix
Bmatrix = np.matrix(B)
A*B
Amatrix * Bmatrix
a = np.ones((2,3), dtype=int)
a
a += 2
a
a *= 2
a
a += 0.3
a *= 1.5
b = np.random.random((2,3))
a
b
dir(np.random)
a
b
a.dtype
b.dtype
b += a
b
b.dtype
a += b
a
a = np.ones(3,dtype=int)
a
b = np.linspace(0,pi,3)
b = np.linspace(0,np.pi,3)
b
a
a.dtype
b.dtype
c = a + b
c
c.dtype
d = np.exp(c*1j)
d
d.dtype
a = np.random.random((2,3))
a.sum()
a.min()
a.max()
a.std()
b = np.arange(12).reshape(3,4)
b
b.sum()
b.sum(axis=0)
b.sum(axis=1)
b.std(axis=1)
b.std(axis=0)
b.max(axis=0)
B = np.arange(3)
B
np.exp(B)
np.sin(B)
np.sin(0.4)
np.sin(B[0])
np.sin(B[2])
np.sin(B)
B
np.sqrt(B)
B**(1/3.)
a = np.arange(10)**3
a
a[2]
a[2:5]
a[2:9:3]
a[::-1]
a[-3:]
def f(x,y):
    return 10*x + y
type(f)
b = np.fromfunction(f, (6,4), dtype=int)
b
b[0:3,:]
b[0:3,-2:]
b[:,2]
b[-1]
b[-1,:]
b
for i in b:
    print(i)
for i in b.flat:
    print(i, end='-')
a = np.floor(10*np.random.random((3,4)))
a
a.shape
a.ravel()
a
a.shape = (6,2)
a
a.transpose()
a.reshape(3,4)
a
a.reshape(4,3)
a
a = np.floor(10*np.random.random((2,12)))
a
np.hsplit(a,3)
np.hsplit(a,3)[0]
np.hsplit(a,3)[1]
np.hsplit(a,(3,4))
np.hsplit(a,(3,4))[1]
a = np.arange(12)
a
b = a
b
b is a
b.shape = 3,4
b
a
c = a.view()
c is a
c.base is a
c.flags.ownsdata
c.flags.owndata
a
c
c.shape = 2,6
a
c
c[0,4]
c[0,4] = 1234
c
a
d = c.copy()
d
d[0,0] = 999
d
c
a
c
a[1,1] = 55
a
c
a
s = a[:,1:3]
s
s[1,:] = 99